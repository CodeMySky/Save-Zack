<!DOCTYPE HTML>
<html>
<head>
	<meta charset="UTF-8" />
	<title>Edit</title>
	<style type="text/css">
		.hide {
			display: none;
		}
		textarea {
			display: inline-block;
			width: 45%;
			height: 300px;
		}
	</style>
	<script src="/javascripts/jquery.min.js" type="text/javascript"></script>
	<script type="application/json" id="task-data">
		<%- task %>
	</script>
</head>
<body>
	<div class="hide">
		<div class="description">
			<textarea id="" class="content" name="" rows="10" cols="30"></textarea>
			<textarea readonly class="processed"></textarea>
		</div>
		<div class="step">
			<textarea id="" class="content" name="" rows="10" cols="30"></textarea>
			<textarea readonly class="processed"></textarea>
		</div>
	</div>
	<div class="task">
		任务编号:<input type = 'number' id = 'taskNo'/></br>
		目标网页地址:<input type = 'text' id = 'target'/>
		任务图片：<input type = 'text' id = 'taskImg' /></br>
		完成任务得到的能量：<input type = 'number' id = 'gain' >
		开启任务所需的能量：<input type = 'number' id = 'requiredEnergy' ></br>
		任务标题：<input type = 'text' id = 'taskTitle' />
		任务描述：<textarea id='description'></textarea></br>
	</div>
	<button>添加一个阶段</button>
	<br/>
	<button>提交</button>

	<script>
		//功略
		$("body").on("keyup", ".description .content", function () {
			var code = $(this).attr("value");
	
			var reg_code = /(<code(?:\s+[^>]*)?>)([^$]*?)(<\/code>)/g;
			var reg_pre = /(<pre(?:\s+[^>]*)?>)([^$]*?)(<\/pre>)/g;	//分组1为开始标签、分组2为内容、分组3为结束标签
			var replace_especial_html = function (whole_code, tag_s, content, tag_e) {
				content = content.replace(/</g, "&lt;");
				content = content.replace(/>/g, "&gt;");
				return tag_s + content + tag_e;
			};
	
			//替换code和pre里的特殊字符
			code = code.replace(reg_code, replace_especial_html);
			code = code.replace(reg_pre, replace_especial_html);
	
			//加<p>,<br/>
			var reg_a_row = /^.*$/gm;	//匹配一行，下一次匹配时lastIndex应指向下一行的开始
			code = code.replace(reg_a_row, function (code_a_row){
				var reg_tag = /^\s*[<>].*$/gm;
				if (/^\s*$/.test(code_a_row)) {
					return '<br/>';
				} else if (!reg_tag.test(code_a_row)) {	//不以<或>开头，括上<p>
					return "<p>"+code_a_row+"</p>";
				} else return code_a_row;
			});
	
			//把pre,code里的<p>和<br/>去掉
			var drop_p_br = function (whole_code, tag_s, content, tag_e) {
				content = content.replace(reg_a_row, function (code_a_row) {
					if (/^<br\/>$/.test(code_a_row)) {
						return '';
					} else {
						return code_a_row.replace(/^<p>(.*)<\/p>$/, '$1');
					}
				});
				return tag_s + content + tag_e;
			};
			code = code.replace(reg_pre, drop_p_br);
			code = code.replace(reg_code, drop_p_br);
	
			$(this).parents(".description").find(".processed").attr('value', code);
		});
	
		//步骤
		$("body").on("keyup", ".step .content", function () {
			var code = $(this).attr("value");
			if (code.search(/^<ol|^<ul/) !== -1) { //认为已处理过
				$(this).parents(".step").find(".processed").attr('value', code);
				return;
			}
	
			//加<ol>,<li>
			var reg_a_row = /^.*$/gm;	//匹配一行，下一次匹配时lastIndex应指向下一行的开始
			code = code.replace(reg_a_row, function (code_a_row){
				return '  <li>' + code_a_row + '</li>';
			});
	
			code = '<ol>\n' +
				code +
				'\n  <li>点击<i class="icon-ok"></i>提交按钮继续</li>' +
				'\n</ol>';
			$(this).parents(".step").find(".processed").attr('value', code);
		});
	</script>
	<script type="text/javascript">
		var addStage = function () {
			var str = "\
				<div class='stage'>\
					<h4>阶段" + ($("div.stage").length+1) + "：</h4>\
					<label>标题：\
						<input type='text' class='title'/>\
					</label>\
					<br/>\
					<label>描述：<br/>\
						<div class='description'>\
							<textarea class='content'></textarea>\
							<textarea readonly class='processed'></textarea>\
						</div>\
					</label>\
					<label>步骤 ：<br/>\
						<div class='step'>\
							<textarea class='content'></textarea>\
							<textarea readonly class='processed'></textarea>\
						</div>\
					</label>\
					<label>答案正确性测试：<br/>\
						<textarea class='SCT'></textarea>\
					</label>\
				</div>";
			var $new_stage = $(str);
			$(this).before($new_stage);
			return $new_stage;
		};
		$("button:contains(添加一个阶段)").click(addStage);

		function upload(){
			var task = new Object;
			task.no = $('#taskNo').attr("value");
			var info = new Object;
			info.target = $('#target').attr("value");
			info.requiredEnergy = Number($('#requiredEnergy').attr("value"));
			info.title = $('#taskTitle').attr("value");
			info.taskImg = $('#taskImg').attr("value");
			info.gain = $('#gain').attr("value");
			info.description = $('#description').attr("value");
			info.hint = $('#hint').attr("value");
			task.info = info;
			var num = $(".stage").length;
			var stageArray = new Array;
			for (var i = 0; i < num; i++){
				var $stage = $(".stage:eq(" + i + ")");
				var stage = new Object;
				stage.title = $stage.find(".title").attr("value");
				stage.description = $stage.find(".description .processed").attr("value");
				stage.step = $stage.find(".step .processed").attr("value");
				stage.SCT = $stage.find(".SCT").attr("value");
				stageArray.push(stage);
			}
			task.stageArray = stageArray;
			var xmlHttp = new XMLHttpRequest();
			xmlHttp.open("POST", "/inputTask", true);
			xmlHttp.setRequestHeader("Content-Type", "application/json");
			xmlHttp.onreadystatechange = function () {
			    if (xmlHttp.readyState === 4) {
			             return_value = xmlHttp.responseText;
			    }
			};
			alert(JSON.stringify(task));
			xmlHttp.send(JSON.stringify(task));
		}
		$("button:contains(提交)").click(upload);

		window.onload = function loadOldStage () {
			var i;
			var task = JSON.parse(unescape($("#task-data").html()));
			window.task = task;
			var stageArray = task.stageArray || [];
			var num = stageArray.length || 0;
			$('#taskNo').attr("value" , task.no);
			var info = task.info || {};
			$('#target').attr("value" , info.target);
			$('#requiredEnergy').attr("value" , info.requiredEnergy);
			$('#taskTitle').attr("value" , info.title);
			$('#taskImg').attr("value" , info.taskImg);
			$('#gain').attr("value" , info.gain);
			$('#description').attr("value" , info.description);
			if (task.info.hint) {
				$('#hint').attr("value" , task.info.hint);
			}
			for (i = 0; i < num; i++){
				$("button:contains(添加一个阶段)").trigger("click");
				var $stage = $(".stage:eq(" + i + ")");
				var stage = stageArray[i];
				$stage.find(".title").attr("value", stage.title);
				$stage.find(".description .content").attr("value", stage.description).
					trigger("keyup");
				$stage.find(".step .content").attr("value" , stage.step).
					trigger("keyup");
				$stage.find(".SCT").attr("value" , stage.SCT);
			}
		}
	</script>
</body>
</html>
